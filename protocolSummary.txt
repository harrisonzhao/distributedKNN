List of messages
[...] denotes an indeterminable length string
Producer = Client

=================================================
Master to Consumer
- k NUMK : k for KNN algorithm
- l IP~PORT : current leader formatted as IP~PORT, need to connect to leader
- b [IP~PORT ...] : updated backup masters list each backup formatted as IP~PORT

Master to Producer
- y ID [IP~PORT ...] : request can be received assigned ID, consumers' IP~PORT as a list delimited by spaces
- n : busy at the moment, check back later (if not enough consumers connected to master)
- l IP~PORT : current leader formatted as IP~PORT, need to connect to leader
- b [IP~PORT ...] : updated backup masters list each backup formatted as IP~PORT

Master to Master
- s PORT : request to be added as a backup with server socket port PORT
- l IP~PORT : current leader formatted as IP~PORT, need to connect to leader
- b [IP~PORT ...] : updated backup masters list each backup formatted as IP~PORT

Master to Self
- r : request to pair producer with consumer, sent upon receiving a 'c' (ProcessAcceptorMessages)
- a : adds a consumer to list of consumers, sent upon receiving a 'k' (ProcessAcceptorMessages)

Master to Aggregator:
- t NUMVECTORS K(for top k) : tells aggregator how many vectors it needs
==================================================
Consumer to Master
- c PORT : identifying message to master upon connection to master serversocket

===================================================
Producer to Master
- p : request to get consumers
- q ID : query master to get category for given ID

Producer to Consumer
- p ID [featureVector] : feature vector to be processed

====================================================
Consumer to Aggregator
- a ID CATEGORY

Aggregator to master
- d ID CATEGORY