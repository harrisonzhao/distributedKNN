List of messages
[...] denotes an indeterminable length string
Producer = Client

=================================================
Master to Consumer
- a IP~PORT : accumulator IP and Port so consumers know where to pass messages 
- k NUMK : k for KNN algorithm
- l IP~PORT : current leader formatted as IP~PORT, need to connect to leader
- b [IP~PORT ...] : updated backup masters list each backup formatted as IP~PORT
- m [featureVec     tor]: sends a training feature vector with its ID to consumer
- n : reject the connection since numConsumers == maxConsumers

Master to Producer
- y ID [IP~PORT ...] : request can be received assigned ID, consumers' IP~PORT as a list delimited by spaces
- n : busy at the moment, check back later (if not enough consumers connected to master)
- l IP~PORT : current leader formatted as IP~PORT, need to connect to leader
- b [IP~PORT ...] : updated backup masters list each backup formatted as IP~PORT
- q ID CATEGORY : category of query 
- c : could not get query

Master to Master
- s PORT : request to be added as a backup with server socket port PORT
- l IP~PORT : current leader formatted as IP~PORT, need to connect to leader
- b [IP~PORT ...] : updated backup masters list each backup formatted as IP~PORT

Master to accumulator:
- n : already connected to accumulator
- l IP~PORT : current leader formatted as IP~PORT, need to connect to leader
- m [IP~PORT ...] : backup string for masters
- t MAXCONSUMERS K(for top k) : tells accumulator how many consumers and k
==================================================
Consumer to Master
- c PORT : identifying message to master upon connection to master serversocket

Consumer to accumulator
- c : identifying message
- a ID CATEGORY : for a feature vector
===================================================
Producer to Master
- p : serves as identifying message
- r [feature vector]: request to pair producer with consumers
- q ID : query master to get category for given ID

Producer to Consumer
- p ID [featureVector] : feature vector to be processed

====================================================
accumulator to consumer
- y : yes accepted connection
- g : rejected connection

accumulator to master
- a PORT: identifying message
- d ID CATEGORY : done with aggregating: here's the given id's category

accumulator to accumulator
- b [IP~PORT ...] : updated backup accumulators list each backup formatted as IP~PORT
- s PORT : request to be added as a backup with server socket port PORT
- h IP~PORT : current lead accumulator to connect to
- o IP~PORT : leader for accumulator


tentative handling disconnections
if... master disconnects, accumulator keeps a copy of results on it
when master sends queried result to client, then master sends to accumulator a done

if... accumulator disconnects, backup replaces it, master sends it all the non-verified IDs
consumers resend their information